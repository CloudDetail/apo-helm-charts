apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "apo-backend.fullname" . }}
  labels:
    {{- include "apo-backend.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "apo-backend.fullname" . }}-headless
  replicas: {{ tpl (toString .Values.replicas) . }}
  selector:
    matchLabels:
      {{- include "apo-backend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "apo-backend.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      hostNetwork: {{ tpl (toString .Values.hostNetwork) . }}
      dnsPolicy: {{ tpl .Values.dnsPolicy . }}
      serviceAccountName: {{ include "apo-backend.fullname" . }}
      serviceAccount: {{ include "apo-backend.fullname" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: check-clickhouse-ready
        image: "{{ tpl .Values.initImage.repository . }}:{{ tpl .Values.initImage.tag . }}"
        imagePullPolicy: {{ tpl .Values.initImage.pullPolicy . }}
        env:
        - name: CLICKHOUSE_URL
          value: {{ .Values.global.clickhouse.host }}:{{ .Values.global.clickhouse.nativePort }}
        command:
        - sh
        - -c
        - |
          CLICKHOUSE_HOST=$(echo $CLICKHOUSE_URL | cut -d ':' -f 1)
          CLICKHOUSE_PORT=$(echo $CLICKHOUSE_URL | cut -d ':' -f 2)
          echo "等待 ${CLICKHOUSE_HOST}:${CLICKHOUSE_PORT} clickhouse启动..."
          while ! nc -z ${CLICKHOUSE_HOST} ${CLICKHOUSE_PORT}; do
            echo "INFO: ClickHouse 连接失败。 将在5s后重新检查"
            sleep 5
          done
          echo "INFO: ClickHouse 连接测试通过"
      containers:
      - name: apo-backend
        image: "{{- include "apo-backend.image" . }}"
        imagePullPolicy: {{ tpl .Values.apoBackend.image.pullPolicy . }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
            {{- toYaml .Values.apoBackend.resources | nindent 12 }}
        volumeMounts:
        - name: apo-backend-config
          mountPath: /app/config/apo.yml
          subPath: apo.yml
        - name: sqlite-storage
          mountPath: /app/database
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 5
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 6
      - name: polaris-analyzer
        image: "{{ tpl .Values.apoPolarisAnalyzer.image.repository . }}:{{ .Values.apoPolarisAnalyzer.image.tag }}"
        imagePullPolicy: {{ tpl .Values.apoBackend.image.pullPolicy . }}
        ports:
        - name: http
          containerPort: 5000
          protocol: TCP
        env:
        - name: PROMETHEUS_ADDRESS
          {{- if eq .Values.global.victoriaMetrics.mode "single" }}
          value: {{ .Values.global.victoriaMetrics.single.url }}
          {{- else if eq .Values.global.victoriaMetrics.mode "cluster" }}
          value: {{ .Values.global.victoriaMetrics.cluster.selectUrl }}
          {{- end }}
        - name: PROMETHEUS_STORAGE
          value: vm
        resources:
            {{- toYaml .Values.apoPolarisAnalyzer.resources | nindent 12 }}
        volumeMounts:
        - name: apo-backend-config
          mountPath: /app/config/
      volumes:
      - name: apo-backend-config
        configMap:
          name: {{ include "apo-backend.fullname" . }}-config
          defaultMode: 420
      {{- if not .Values.persistence.enabled }}
      - name: sqlite-storage
        emptyDir: {}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: sqlite-storage
      labels:
        {{- include "apo-backend.labels" . | nindent 8 }}
    spec:
      accessModes:
      {{- range .Values.persistence.accessModes }}
        - {{ . | quote }}
      {{- end }}
      volumeMode: Filesystem
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
      {{- if ( tpl .Values.persistence.storageClass . ) }}
      storageClassName: {{ tpl .Values.persistence.storageClass . }}
      {{- end }}
  {{- end }}
