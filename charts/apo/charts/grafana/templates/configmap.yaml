{{- if .Values.createConfigmap }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "grafana.fullname" . }}
  namespace: {{ include "grafana.namespace" . }}
  labels:
    {{- include "grafana.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
data:
  {{- include "grafana.configData" . | nindent 2 }}
  grafana.ini: |
    app_mode = production
    [analytics]
    check_for_updates = false
    reporting_enabled = false
    [auth]
    disable_login_form = false
    disable_signout_menu = false
    [auth.anonymous]
    enabled = true
    hide_version = true
    org_name = Main Org.
    org_role = Admin
    [database]
    type = postgres
    host = {{ tpl .Values.global.postgres.host . }}:{{ printf "%d" (.Values.global.postgres.port | int) }}
    name = {{ tpl .Values.global.postgres.apoGrafanaDatabase . }}
    user = {{ tpl .Values.global.postgres.username . }}
    password = {{ tpl .Values.global.postgres.password . }}
    database = {{ tpl .Values.global.postgres.apoGrafanaDatabase . }}
    ssl_mode = disable
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [news]
    news_feed_enabled = false
    [paths]
    data = /var/lib/grafana/
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning
    [profile]
    enabled = false
    [quota]
    enabled = false
    [security]
    allow_embedding = true
    disable_gravatar = true
    disable_initial_admin_creation = false
    [server]
    ;http_port = 3000
    domain = localhost
    enable_gzip = true
    enforce_domain = false
    protocol = http
    root_url = %(protocol)s://%(domain)s/grafana/
    serve_from_sub_path = true
    [snapshots]
    external_enabled = false
    [users]
    allow_org_create = true
    allow_sign_up = true
    auto_assign_org_role = Admin
    default_language = en
    home_page = /grafana/
  datasources.yaml: |-
    apiVersion: 1
    datasources: 
    - name: APO-VictoriaMetric
      type: prometheus
      {{- if eq .Values.global.victoriaMetrics.mode "single" }}
      url: "{{ .Values.global.victoriaMetrics.single.url }}"
      {{- else if eq .Values.global.victoriaMetrics.mode "cluster" }}
      url: "{{ .Values.global.victoriaMetrics.cluster.selectUrl }}"
      {{- end }}
      access: proxy
      isDefault: true
      uid: APO-VictoriaMetric
    - jsonData:
        port: "{{ .Values.global.clickhouse.nativePort }}"
        server: "{{ .Values.global.clickhouse.host }}"
        username: "{{ .Values.global.clickhouse.username }}"
      name: APO-Clickhouse
      secureJsonData:
        password: "{{ .Values.global.clickhouse.password }}"
      type: grafana-clickhouse-datasource
      uid: APO-Clickhouse
{{- end }}
