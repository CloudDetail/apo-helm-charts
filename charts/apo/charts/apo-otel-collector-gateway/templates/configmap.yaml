apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "apo-otel-collector-gateway.fullname" . }}-config
  labels:
    {{- include "apo-otel-collector-gateway.labels" . | nindent 4 }}
data:
  otelcol-config.yaml: |-
    extensions:
      pprof:
        endpoint: 0.0.0.0:1777
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4315
            max_recv_msg_size_mib: 999999999
          http:
            endpoint: 0.0.0.0:4316
      otlp/gateway:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
            max_recv_msg_size_mib: 999999999
          http:
            endpoint: 0.0.0.0:4318
      otlp/k8sevent:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4319
            max_recv_msg_size_mib: 999999999
          http:
            endpoint: 0.0.0.0:4320
      k8s_events:
        auth_type: serviceAccount
        namespaces: []
      skywalking:
        protocols:
          grpc:
            endpoint: 0.0.0.0:11800 # 接收 SkyWalking Agent 上报的 Trace 数据
          http:
            endpoint: 0.0.0.0:12800 # 接收从前端/ nginx 等 HTTP 协议上报的 Trace 数据
    processors:
      batch:
        send_batch_size: 10000
        timeout: 2s
      metadata:
        # The indicator prefix that needs to be filled with K8s information
        metric_prefix: "kindling_"
        # k8s data source
        kube_source:
          # kube_auth_type, support serviceAccount and kubeConfig, default is serviceAccount
          kube_auth_type: serviceAccount
          # kube_auth_config, kubeConfig file path, only used when kube_auth_type is kubeConfig
          kube_auth_config: ~/.kube/config
          # cluster_id, setup cluster id in kube metadata
          cluster_id: "apo-agent"
        exporter:
          # remote_write_addr, push kube metadata to other server, remove if not need
          remote_write_addr: "{{ tpl .Values.config.apoBackendUrl . }}:{{ tpl .Values.config.apoBackendPort . }}/metadata"
          # fetch_server_port, allowed other client fetch from this port, remove if not need
          fetch_server_port: 8080
        querier:
          is_single_cluster: true
          query_server_port: 8080
    exporters:
      debug:
        verbosity: normal
        sampling_initial: 5
        sampling_thereafter: 200
      otlp:
        endpoint: "{{ tpl .Values.config.jaegerCollectorUrl . }}"
        tls:
          insecure: true
      prometheusremotewrite:
        endpoint: "{{ tpl .Values.config.victoriaMetricsUrl . }}/api/v1/write"
        tls:
          insecure: true
      clickhouse/logs:
        endpoint: "tcp://{{ tpl .Values.config.clickhouseUrl . }}?dial_timeout=10s&compress=lz4"
        username: {{ tpl .Values.config.clickhouseUsername . }}
        password: {{ tpl .Values.config.clickhousePassword . }}
        database: {{ tpl .Values.global.clickhouseDatabase . }}
        ttl: 168h
        create_schema: false
        logs_table_name: ilogtail_logs
        traces_table_name: otel_traces
        metrics_table_name: otel_metrics
        timeout: 5s
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_interval: 30s
          max_elapsed_time: 300s
      clickhouse/k8sevent:
        endpoint: "tcp://{{ tpl .Values.config.clickhouseUrl . }}?dial_timeout=10s&compress=lz4"
        username: {{ tpl .Values.config.clickhouseUsername . }}
        password: {{ tpl .Values.config.clickhousePassword . }}
        database: {{ tpl .Values.global.clickhouseDatabase . }}
        ttl: 720h
        create_schema: false
        logs_table_name: k8s_events
        traces_table_name: otel_traces
        metrics_table_name: otel_metrics
        timeout: 5s
        retry_on_failure:
          enabled: true
          initial_interval: 5s
          max_interval: 30s
          max_elapsed_time: 300s
        # cluster_name: my_cluster
        # table_engine:
        #   name: ReplicatedMergeTree
        #   params:
    service:
      telemetry:
        logs:
          level: info
        metrics:
          level: none
      extensions: [pprof]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp]
        traces/gateway:
          receivers: [otlp/gateway]
          processors: [batch]
          exporters: [otlp]
        metrics:
          receivers: [otlp]
          processors: [batch,metadata]
          exporters: [prometheusremotewrite]
        metrics/gateway:
          receivers: [otlp/gateway]
          processors: [batch]
          exporters: [prometheusremotewrite]
        logs:
          receivers: [otlp]
          processors: [batch]
          exporters: [clickhouse/logs]
        logs/gateway:
          receivers: [otlp/gateway]
          processors: [batch]
          exporters: [clickhouse/logs]
        logs/k8sevent:
          receivers: [otlp/k8sevent,k8s_events]
          processors: [batch]
          exporters: [clickhouse/k8sevent, debug]
