{{- if and .Values.server.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vmalert.server.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "vmalert.server.labels" . | nindent 4 }}
  {{- with .Values.server.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  minReadySeconds: {{ .Values.server.minReadySeconds }}
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels:
      {{- include "vmalert.server.matchLabels" . | nindent 6 }}
  {{- with .Values.server.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "vmalert.server.labels" . | nindent 8 }}
        {{- range $key, $value := .Values.server.podLabels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/server-alerts-configmap.yaml") . | sha256sum }}
        {{- range $key, $value := .Values.server.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
    {{- with .Values.server.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "vmalert.serviceAccountName" . }}
      {{- if .Values.server.podSecurityContext.enabled }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.server.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.serviceAccount.automountToken }}
      containers:
        - name: {{ template "vmalert.name" . }}-{{ .Values.server.name }}
          {{- if .Values.server.securityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.server.securityContext "context" $) | nindent 12 }}
          {{- end }}
          image: "{{ tpl .Values.server.image.repository . }}:{{ default .Chart.AppVersion .Values.server.image.tag }}{{- with .Values.server.image.variant }}-{{ . }}{{- end }}"
          args:
            - -rule=/config/alert-rules.yaml
            {{- if eq .Values.global.victoriaMetrics.mode "single" }}
            - -datasource.url={{ .Values.global.victoriaMetrics.single.url }}
            {{- else if eq .Values.global.victoriaMetrics.mode "cluster" }}
            - -datasource.url={{ .Values.global.victoriaMetrics.cluster.selectUrl }}
            - -remoteRead.url={{ .Values.global.victoriaMetrics.cluster.selectUrl }}
            - -remoteWrite.url={{ .Values.global.victoriaMetrics.cluster.insertUrl }}
            {{- end }}
            {{- if or .Values.server.datasource.basicAuth.password .Values.server.datasource.basicAuth.username  }}
            - -datasource.basicAuth.password={{ .Values.server.datasource.basicAuth.password}}
            - -datasource.basicAuth.username={{ .Values.server.datasource.basicAuth.username}}
            {{- end }}
            {{- with .Values.server.datasource.bearer.token }}
            - -datasource.bearerToken={{ . }}
            {{- end }}
            {{- with .Values.server.datasource.bearer.tokenFile }}
            - -datasource.bearerTokenFile={{ . }}
            {{- end }}
            {{- with (include "vmalert.alertmanager.urls" .) }}
            - -notifier.url={{ . }}
            {{- end }}
            {{- with (include "vmalert.alertmanager.passwords" .) }}
            - -notifier.basicAuth.password={{ . }}
            {{- end }}
            {{- with (include "vmalert.alertmanager.usernames" .) }}
            - -notifier.basicAuth.username={{ . }}
            {{- end }}
            {{- with (include "vmalert.alertmanager.bearerTokens" .) }}
            - -notifier.bearerToken={{ . }}
            {{- end }}
            {{- with (include "vmalert.alertmanager.bearerTokenFiles" .) }}
            - -notifier.bearerTokenFile={{ . }}
            {{- end }}
            {{- if .Values.server.remote.read.url }}
            - -remoteRead.url={{ .Values.server.remote.read.url }}
            {{- end }}
            {{- if or .Values.server.remote.read.basicAuth.password .Values.server.remote.read.basicAuth.username }}
            - -remoteRead.basicAuth.password={{ .Values.server.remote.read.basicAuth.password }}
            - -remoteRead.basicAuth.username={{ .Values.server.remote.read.basicAuth.username }}
            {{- end }}
            {{- with .Values.server.remote.read.bearer.token }}
            - -remoteRead.bearerToken={{ . }}
            {{- end }}
            {{- with .Values.server.remote.read.bearer.tokenFile }}
            - -remoteRead.bearerTokenFile={{ . }}
            {{- end }}
            {{- if .Values.server.remote.write.url }}
            - -remoteWrite.url={{ .Values.server.remote.write.url }}
            {{- end }}
            {{- if or .Values.server.remote.write.basicAuth.password .Values.server.remote.write.basicAuth.username  }}
            - -remoteWrite.basicAuth.password={{ .Values.server.remote.write.basicAuth.password }}
            - -remoteWrite.basicAuth.username={{ .Values.server.remote.write.basicAuth.username }}
            {{- end }}
            {{- with .Values.server.remote.write.bearer.token }}
            - -remoteWrite.bearerToken={{ . }}
            {{- end }}
            {{- with .Values.server.remote.write.bearer.tokenFile }}
            - -remoteWrite.bearerTokenFile={{ . }}
            {{- end }}
            {{- range $key, $value := .Values.server.extraArgs }}
            {{- if kindIs "slice" $value }}
            {{- range $v := $value }}
            - -{{ $key }}={{ $v }}
            {{- end }}
            {{- else if eq $key "rule" }}
            - -{{ $key }}={{ $value | quote }}
            {{- else }}
            - -{{ $key }}={{ $value }}
            {{- end }}
            {{- end }}
            {{- with (include "vmalert.license.flag" .) }}
            - {{ . }}
            {{- end }}
          imagePullPolicy: {{ tpl .Values.server.image.pullPolicy . }}
          {{- if .Values.server.envFrom }}
          envFrom:
            {{- with .Values.server.envFrom -}}
            {{ toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- with .Values.server.env }}
          env: {{ toYaml . | nindent 10 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 8880
          readinessProbe:
            httpGet:
            {{- if index  .Values.server.extraArgs "http.pathPrefix" }}
              path: {{ trimSuffix "/" (index .Values.server.extraArgs "http.pathPrefix") }}/health
            {{- else }}
              path: /health
            {{- end }}
              port: http
            initialDelaySeconds: {{ .Values.server.probe.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.server.probe.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.server.probe.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.server.probe.readiness.failureThreshold }}
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: {{ .Values.server.probe.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.server.probe.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.server.probe.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.server.probe.liveness.failureThreshold }}
          volumeMounts:
            - name: alerts-config
              mountPath: /config
            {{- range .Values.server.extraHostPathMounts }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
              subPath: {{ .subPath }}
              readOnly: {{ .readOnly }}
            {{- end }}
            {{- with .Values.server.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- include "vmalert.license.mount" . | nindent 12 }}
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
        {{- with .Values.server.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- if .Values.server.priorityClassName }}
      priorityClassName: {{ .Values.server.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.server.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.server.nodeSelector | indent 8 }}
      {{- else if .Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.global.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.server.affinity }}
      {{- with .Values.server.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- else if .Values.global.affinity }}
      {{- with .Values.global.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- if .Values.server.tolerations }}
      tolerations:
{{ toYaml .Values.server.tolerations | indent 8 }}
      {{- else if .Values.global.tolerations }}
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
      {{- end }}
      volumes:
        - name: alerts-config
          configMap:
            name: {{ include "vmalert.server.configname" . }}
        {{- range .Values.server.extraHostPathMounts }}
        - name: {{ .name }}
          hostPath:
            path: {{ .hostPath }}
        {{- end }}
        {{- with .Values.server.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- include "vmalert.license.volume" . | nindent 8 }}
{{- end -}}
