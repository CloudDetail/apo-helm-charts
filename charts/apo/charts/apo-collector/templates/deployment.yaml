apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "apo-collector.fullname" . }}
  labels:
    {{- include "apo-collector.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "apo-collector.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/apo-collcetor-config: {{ include (print $.Template.BasePath "/apo-collector-configmap.yaml") . | sha256sum }}
        checksum/apo-apm-adapter-config: {{ include (print $.Template.BasePath "/apo-apm-adapter-configmap.yaml") . | sha256sum }}
      labels:
        {{- include "apo-collector.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      - name: check-clickhouse-ready
        image: "{{ tpl .Values.initImage.repository . }}:{{ tpl .Values.initImage.tag . }}"
        imagePullPolicy: {{ tpl .Values.initImage.pullPolicy . }}
        env:
        - name: CLICKHOUSE_URL
          value: {{ .Values.global.clickhouse.host }}:{{ .Values.global.clickhouse.nativePort }}
        command:
        - sh
        - -c
        - |
          CLICKHOUSE_HOST=$(echo $CLICKHOUSE_URL | cut -d ':' -f 1)
          CLICKHOUSE_PORT=$(echo $CLICKHOUSE_URL | cut -d ':' -f 2)
          echo "等待 ${CLICKHOUSE_HOST}:${CLICKHOUSE_PORT} clickhouse启动..."
          while ! nc -z ${CLICKHOUSE_HOST} ${CLICKHOUSE_PORT}; do
            echo "INFO: ClickHouse 还未启动成功。 将在5s后重新检查"
            sleep 5
          done
          echo "INFO: ClickHouse 启动成功"
      containers:
        - name: apo-collector
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ tpl .Values.apoCollector.image.repository . }}:{{ .Values.apoCollector.image.tag }}"
          imagePullPolicy: {{ tpl .Values.apoCollector.image.pullPolicy . }}
          resources:
            {{- toYaml .Values.apoCollector.resources | nindent 12 }}
          ports:
            - name: grpc
              containerPort: 29090
              protocol: TCP
          volumeMounts:
            - name: apo-collector-config
              mountPath: /app/receiver-config.yml
              subPath: receiver-config.yml
        - name: apm-adapter
          image: "{{ tpl .Values.apoApmAdapter.image.repository . }}:{{ .Values.apoApmAdapter.image.tag }}"
          imagePullPolicy: {{ tpl .Values.apoApmAdapter.image.pullPolicy . }}
          env:
            - name: EXCEPTION_AS_ERROR
              value: "true"
          ports:
            - name: http
              containerPort: 8079
              protocol: TCP
          resources:
            {{- toYaml .Values.apoApmAdapter.resources | nindent 12 }}
          volumeMounts:
            - name: apm-adapter-config
              mountPath: /app/apm-adapter.yml
              subPath: apm-adapter.yml
      volumes:
        - name: apo-collector-config
          configMap:
            name: {{ include "apo-collector.fullname" . }}-config
        - name: apm-adapter-config
          configMap:
            name: apo-apm-adapter-config
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- else if .Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.global.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      {{- with .Values.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- else if .Values.global.affinity }}
      {{- with .Values.global.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- else if .Values.global.tolerations }}
      tolerations:
{{ toYaml .Values.global.tolerations | indent 8 }}
      {{- end }}
