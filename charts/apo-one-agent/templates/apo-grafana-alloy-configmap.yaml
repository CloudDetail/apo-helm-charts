apiVersion: v1
kind: ConfigMap
metadata:
  name: apo-grafana-alloy-config
  labels:
    {{- include "apo-one-agent.labels" . | nindent 4 }}
data:
  config.alloy: |-
    logging {
      level  = "info"
      format = "logfmt"
    }


    otelcol.receiver.prometheus "default" {
      output {
      metrics = [otelcol.exporter.otlp.default.input]
      }
    }

    otelcol.exporter.otlp "default" {
      client {
        endpoint = "{{ .Values.grafanaAlloy.config.apoOtelCollectorGrpcUrl }}"
        tls {
            insecure = true
            insecure_skip_verify = true
        }
      }
    }

    prometheus.relabel "example" {
        forward_to = [otelcol.receiver.prometheus.default.receiver]

        rule {
            action       = "replace"
            source_labels = ["instance"]
            target_label = "instance_name"
        }
        rule {
            action       = "replace"
            source_labels = ["job"]
            target_label = "job_name"
        }
    }

    prometheus.exporter.unix "local_system" {
      rootfs_path = "/host/rootfs"
      filesystem {
        fs_types_exclude = "^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|tmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs|fuse.gvfsd-fuse)$"
        mount_points_exclude = "^/(dev|proc|run/credentials/.+|sys|var/lib/kubelet/pods/.+|var/lib/docker/.+|var/lib/containers/.+)($|/)"
      }
    }
