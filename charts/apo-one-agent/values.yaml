global:
  edition: ee

  # clusterId: Must be modified to a custom ID. The cluster ID is used to distinguish different clusters in multi-cluster deployments, primarily for APO-OneAgent deployment configuration.
  clusterId: ""

  image:
    # -- Docker image repository
    # docker.io/clouddetail (default/amd64)
    # registry.cn-hangzhou.aliyuncs.com/kindlingx (amd64)
    repository: "docker.io/clouddetail"
    eeRepository: "docker.io/clouddetail"
    pullPolicy: "Always"
  
  # APO Collection Modes  
  # - trace              Full data collection, automatically injects trace collection probes  
  # - trace-collector    Use collector to receive trace data from external probes  
  # - trace-sidecar      Do not accept external trace data, directly retrieve data from external APIs, this mode requires configuring external API data sources  
  # - no-trace           Do not collect trace data
  # - metrics            Full metrics data collection  
  # - log                Full log collection, including fault scenario logs  
  # - log-sample         Fault scenario log collection, without collecting full logs  
  agentCollectorMode:
    - trace
    - metrics
    - log
  
  victoriaMetrics:
    # victoriaMetrics-single(single) or victoriaMetrics-cluster(cluster)
    # After switching modes, the corresponding URL for the mode needs to be provided.
    mode: single 
    single:
      url: "http://apo-victoria-metrics-single-server-svc:8428"
    cluster:
      # selectUrl: "http://<vmselect>:8481/select/<accountID>/prometheus"
      selectUrl: http://read-service-url:8080/select/0/prometheus/
      # insertUrl: "http://<vmselect>:8481/select/<accountID>/prometheus"
      insertUrl: http://write-service-url:8080/insert/0/prometheus/
  apoServerIP: ""
  apoProxyUrl: apo-nginx-proxy-svc
  apoBackendPort: 31363
  apoCollectorProxyPort: 30044
  apoVectorLogProxyPort: 30310
  apoCollectorPort: 30044
  apoOtelCollectorGatewayGRPCPort: 30317
  apoOtelCollectorGatewayK8SPort: 30319
  apoVectorLogPort: 30310
  
  # -- Pod's node selector. Ref: [https://kubernetes.io/docs/user-guide/node-selection/](https://kubernetes.io/docs/user-guide/node-selection/)
  nodeSelector: {}
  # nodeSelector:
  #   kubernetes.io/hostname: demo-node

  # -- Pod affinity
  affinity: {}
  # affinity:
  #   nodeAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #       nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: topology.kubernetes.io/zone
  #           operator: In
  #           values:
  #           - antarctica-east1

  # -- Node tolerations for server scheduling to nodes with taints. Ref: [https://kubernetes.io/docs/concepts/configuration/assign-pod-node/](https://kubernetes.io/docs/concepts/configuration/assign-pod-node/)
  tolerations: []
  # tolerations:
  # - key: "key"
  #   operator: "Equal|Exists"
  #   value: "value"
  #   effect: "NoSchedule|PreferNoSchedule"

nameOverride: ""
podAnnotations: {}
dnsPolicy: "ClusterFirstWithHostNet"
podSecurityContext: {}

apoOneAgent:
  enabled: true
  image:
    repository: "{{ .Values.global.image.repository }}/ebpf-agent"
    pullPolicy: "{{ .Values.global.image.pullPolicy }}"
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.9.7"
  resources: 
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 128Mi
  config:
    apoCollectorUrl: "{{ .Values.global.apoProxyUrl }}"
    apoCollectorPort: "{{ .Values.global.apoCollectorProxyPort }}"

apoNodeAgent:
  image:
    repository: "{{ .Values.global.image.repository }}/node-agent"
    pullPolicy: "{{ .Values.global.image.pullPolicy }}"
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.8.0"
  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  apoOtelCollectorUrl: "apo-otel-collector-svc:8080"

apoIlogtail:
  image:
    repository: "{{ .Values.global.image.repository }}/ilogtail"
    pullPolicy: "{{ .Values.global.image.pullPolicy }}"
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.5.2"
  resources: 
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  apoOtelCollectorGrpcUrl: "apo-otel-collector-svc:4317"
  apoVectorLogUrl: "{{ .Values.global.apoProxyUrl }}:{{ .Values.global.apoVectorLogProxyPort }}"

grafanaAlloy:
  image:
    repository: "{{ .Values.global.image.repository }}/grafana-alloy"
    pullPolicy: "{{ .Values.global.image.pullPolicy }}"
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.4.2-1"
  resources: 
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  config:
    apoOtelCollectorGrpcUrl: "apo-otel-collector-svc:4317"
    apoOtelCollectorHttpUrl: "apo-otel-collector-svc:4318"

grafanaBeyla:
  enabled: false
  image:
    repository: "{{ .Values.global.image.repository }}/apo-beyla"
    pullPolicy: "{{ .Values.global.image.pullPolicy }}"
    tag: "v1.8.4-1"
  resources: 
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 128Mi
  config:
    k8sNamespace: "^/(/?/!{{ .Release.Namespace }}$).*"

odiglet:
  image:
    repository: "{{ .Values.global.image.repository }}/apo-odiglet"
    pullPolicy: "{{ .Values.global.image.pullPolicy }}"
    tag: "v1.0.3"
  resources:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 10m
      memory: 64Mi
  apoOtelCollectorGrpcUrl: "apo-otel-collector-svc.{{ .Release.Namespace }}:4317"
  apoOtelCollectorHttpUrl: "apo-otel-collector-svc.{{ .Release.Namespace }}:4318"
  apoOtelCollectorSkywalkingUrl: "apo-otel-collector-svc.{{ .Release.Namespace }}:11800"

apoOtelCollectorAgent:
  image:
    repository: "{{ .Values.global.image.repository }}/apo-otel-collector"
    pullPolicy: "{{ .Values.global.image.pullPolicy }}"
    tag: "v1.3.2"
  resources: 
    limits:
      cpu: 2000m
      memory: 1024Mi
    requests:
      cpu: 100m
      memory: 128Mi
  config:
    apoCollectorUrl: "{{ .Values.global.apoProxyUrl }}"
    apoCollectorPort: "{{ .Values.global.apoCollectorProxyPort }}"
    apoOtelCollectorUrl: "apo-otel-collector-svc"
    apoOtelCollectorGRPCPort: "4317"

originxGcAgent:
  image:
    repository: "{{ .Values.global.image.eeRepository }}/originx-gc-agent"
    pullPolicy: "{{ .Values.global.image.pullPolicy }}"
    tag: "v1.4.1"
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 10m
      memory: 64Mi
  config:
    apoCollectorUrl: "{{ .Values.global.apoProxyUrl }}"
    apoCollectorPort: "{{ .Values.global.apoCollectorProxyPort }}"

profileAgent:
  enabled: true
  image:
    repository: "{{ .Values.global.image.eeRepository }}/profile-agent"
    pullPolicy: "{{ .Values.global.image.pullPolicy }}"
    tag: "v1.0.0"
  resources:
    limits:
      cpu: 500m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  config:
    apoCollectorUrl: "{{ .Values.global.apoProxyUrl }}"
    apoCollectorPort: "{{ .Values.global.apoCollectorProxyPort }}"

vmagent:
  image:
    repository: "{{ .Values.global.image.repository }}/vmagent"
    pullPolicy: "{{ .Values.global.image.pullPolicy }}"
    tag: "v1.102.1"
  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 10m
      memory: 64Mi
  remoteWriteUrls: "http://apo-otel-collector-svc:4321"

odigos:
  enabled: true
  instrumentor:
    image:
      repository: "{{ .Values.global.image.repository }}/apo-odigos-instrumentor"
      imagePullPolicy: "{{ .Values.global.image.pullPolicy }}"
      tag: "v1.0.6"
    resources:
      limits:
        cpu: 1000m
        memory: 1024Mi
      requests:
        cpu: 10m
        memory: 64Mi
    # targetNamespace  
    # name: Target namespace  
    # value:  
    #   enabled: Inject all existing services but do not inject newly added applications  
    #   enabledFuture: Inject both current and future services  
    #   disabled: Do not inject services in the specified namespace; used to exclude specific namespaces when instrument-all-namespace is enabled  
    # targetNamespace:  
    # - name: default  
    #   value: disabled  
    # instrument-all-namespace Whether to inject all namespaces  
    # Equivalent to setting enabledFuture for all namespaces  
    # However, if disabled is already set for a namespace or workload, it will not be injected  
    instrumentAllNamespace: true
    # force-instrument-all-namespace Whether to force inject all namespaces  
    # Similar to instrument-all-namespace, sets enabledFuture for all namespaces  
    # Ignores all disabled settings  
    forceInstrumentAllNamespace: false
    # enableOverwriteUserDefinedEnvs: Whether to overwrite user-defined environment variables
    enableOverwriteUserDefinedEnvs: false
  config:
    apoOtelCollectorGrpcUrl: "apo-otel-collector-svc.{{ .Release.Namespace }}:4317"
    apoOtelCollectorHttpUrl: "apo-otel-collector-svc.{{ .Release.Namespace }}:4318"
    apoOtelCollectorSkywalkingUrl: "apo-otel-collector-svc.{{ .Release.Namespace }}:11800"
    javaAgentType: "opentelemetry"

apo-nginx-proxy:
  enabled: true
  image:
    repository: "{{ .Values.global.image.repository }}/nginx"
    pullPolicy: "{{ .Values.global.image.pullPolicy }}"
    # Overrides the image tag whose default is the chart appVersion.
    tag: "stable-alpine3.20"
  # resources:
  #   limits:
  #     cpu: 1000m
  #     memory: 1024Mi
  #   requests:
  #     cpu: 10m
  #     memory: 64Mi
  config:
    apoCollectorUrl: "{{ .Values.global.apoServerIP }}"
    apoCollectorPort: "{{ .Values.global.apoCollectorPort }}"

apo-otel-collector:
  enabled: true
  image:
    repository: "{{ .Values.global.image.repository }}/apo-otel-collector"
    pullPolicy: "{{ .Values.global.image.pullPolicy }}"
    # Overrides the image tag whose default is the chart appVersion.
    tag: "v1.3.2"
  config:
    apoBackendUrl: "{{ .Values.global.apoServerIP }}"
    apoBackendPort: "{{ .Values.global.apoBackendPort }}"
    apoOtelCollectorGatewayURL: "{{ .Values.global.apoServerIP }}"
    apoOtelCollectorGatewayGRPCPort: "{{ .Values.global.apoOtelCollectorGatewayGRPCPort }}"
    apoOtelCollectorGatewayK8SPort: "{{ .Values.global.apoOtelCollectorGatewayK8SPort }}"
  service:
    ports:
    - name: query
      protocol: TCP
      port: 8080
      targetPort: 8080
    - name: metric
      protocol: TCP
      port: 9500
      targetPort: 9500
    - name: otlpgrpc
      protocol: TCP
      port: 4317
      targetPort: 4317
    - name: otlphttp
      protocol: TCP
      port: 4318
      targetPort: 4318
    - name: pmremotewrite
      protocol: TCP
      port: 4321
      targetPort: 4321
    - name: sk-receiver
      protocol: TCP
      port: 11800
      targetPort: 11800
    type: ClusterIP
  resources: 
    limits:
      cpu: 3000m
      memory: 3072Mi
    requests:
      cpu: 100m
      memory: 128Mi
  rbac:
    create: true

serviceAccount:
  name: null
  additionalLabels: {}
  # -- Annotations to add to the created service account.
  annotations: {}
  # -- The name of the existing service account to use when
  # serviceAccount.create is false.a

nodeSelector: {}
affinity: {}
tolerations: []
