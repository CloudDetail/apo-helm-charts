apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "apo-otel-collector.fullname" . }}-config
  labels:
    {{- include "apo-otel-collector.labels" . | nindent 4 }}
data:
  otelcol-config.yaml: |-
    extensions:
      pprof:
        endpoint: 0.0.0.0:1777
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
            max_recv_msg_size_mib: 999999999
          http:
            endpoint: 0.0.0.0:4318
      k8s_events:
        auth_type: serviceAccount
        namespaces: []
      signalfxgatewayprometheusremotewrite: 
        endpoint: 0.0.0.0:4321
      prometheus:
        config:
          scrape_configs:
          - job_name: apo-otel-collector
            scrape_interval: 15s
            static_configs:
            - targets: ['localhost:1778']
      skywalking:
        protocols:
          grpc:
            endpoint: 0.0.0.0:11800 # 接收 SkyWalking Agent 上报的 Trace 数据
          http:
            endpoint: 0.0.0.0:12800 # 接收从前端/ nginx 等 HTTP 协议上报的 Trace 数据
    processors:
      batch:
        send_batch_size: 5000
        timeout: 2s
      metadata:
        # The indicator prefix that needs to be filled with K8s information
        metric_prefixs: ["kindling_", "originx_"]
        # k8s data source
        kube_source:
          # kube_auth_type, support serviceAccount and kubeConfig, default is serviceAccount
          kube_auth_type: serviceAccount
          # kube_auth_config, kubeConfig file path, only used when kube_auth_type is kubeConfig
          kube_auth_config: ~/.kube/config
          # cluster_id, setup cluster id in kube metadata
          cluster_id: "{{ tpl .Values.config.clusterID . }}"
        exporter:
          # remote_write_addr, push kube metadata to other server, remove if not need
          remote_write_addr: "{{ tpl .Values.config.apoBackendUrl . }}:{{ tpl .Values.config.apoBackendPort . }}/metadata"
          # fetch_server_port, allowed other client fetch from this port, remove if not need
          fetch_server_port: 8080
        querier:
          is_single_cluster: true
          query_server_port: 8080
    exporters:
      debug:
        verbosity: normal
        sampling_initial: 5
        sampling_thereafter: 200
      otlp:
        endpoint: "{{ tpl .Values.config.apoOtelCollectorGatewayURL . }}:{{ tpl .Values.config.apoOtelCollectorGatewayGRPCPort . }}"
        tls:
          insecure: true
        sending_queue:
          enabled: true
          num_consumers: 5
          queue_size: 100
      otlp/k8sevent:
        endpoint: "{{ tpl .Values.config.apoOtelCollectorGatewayURL . }}:{{ tpl .Values.config.apoOtelCollectorGatewayK8SPort . }}"
        tls:
          insecure: true
    service:
      telemetry:
        logs:
          level: info
        metrics:
          address: 0.0.0.0:1778
          level: detailed
        resource:
          node_name: "${MY_NODE_NAME}"
      extensions: [pprof]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp]
        metrics:
          receivers: [signalfxgatewayprometheusremotewrite, otlp]
          processors: [batch, metadata]
          exporters: [otlp]
        metrics/telemetry:
          receivers: [prometheus]
          processors: []
          exporters: [otlp]
        logs:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp]
        logs/k8sevent:
          receivers: [k8s_events]
          processors: [batch]
          exporters: [otlp/k8sevent, debug]
