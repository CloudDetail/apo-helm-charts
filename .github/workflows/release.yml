name: Release Charts

on:
  push:
    branches:
      - main
      - test-action

jobs:
  release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    environment: Secrets
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Copy Agent chart
        run: |
          cp -rf charts/apo-one-agent charts/apo/charts/

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.2

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          username: "${{ secrets.DOCKERHUB_REGISTRY_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_REGISTRY_PASSWORD }}"

      - name: Sync image
        run: |
          IMAGES=$(helm template apo charts/apo -n apo --set apo-one-agent.enabled=true --set global.image.repository="registry.cn-hangzhou.aliyuncs.com/kindlingx" --set global.image.eeRepository="registry.cn-hangzhou.aliyuncs.com/kindlingx" | grep "image:" | awk -F': ' '{print $2}' | sed "s/'//g" | sed 's/"//g' | sort | uniq)
          for IMAGE in $IMAGES
            do 
              SORTIMAGE=$(echo $IMAGE|awk -F/ '{print $NF}')
              echo $SORTIMAGE
              docker pull --platform linux/amd64 $IMAGE
              docker tag $IMAGE docker.io/clouddetail/$SORTIMAGE
              docker push docker.io/clouddetail/$SORTIMAGE
              if [ $SORTIMAGE == "apo-backend-ee" ]; then
                IMAGE-CE=$(echo $IMAGE|sed 's/apo-backend-ee/apo-backend/g')
                SORTIMAGE=$(echo $IMAGE-CE|awk -F/ '{print $NF}')
                echo $SORTIMAGE
                docker pull --platform linux/amd64 $IMAGE-CE
                docker tag $IMAGE-CE docker.io/clouddetail/$SORTIMAGE
                docker push docker.io/clouddetail/$SORTIMAGE
              else if [ $SORTIMAGE == "apo-front-ee" ]; then
                IMAGE-CE=$(echo $IMAGE|sed 's/apo-front-ee/apo-front/g')
                SORTIMAGE=$(echo $IMAGE-CE|awk -F/ '{print $NF}')
                echo $SORTIMAGE
                docker pull --platform linux/amd64 $IMAGE-CE
                docker tag $IMAGE-CE docker.io/clouddetail/$SORTIMAGE
                docker push docker.io/clouddetail/$SORTIMAGE
              fi
            done

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Check no chart changes
        run: |
          if compgen -G ".cr-release-packages/apo-*.tgz" > /dev/null; then
            echo "Chart changes, continuing workflow..."
            echo "chartChangeFlag=0" >> $GITHUB_ENV
          else
            echo "No chart changes, exiting successfully."
            echo "chartChangeFlag=1" >> $GITHUB_ENV
          fi

      - name: Install aliyun ossutil
        if: ${{ env.chartChangeFlag == '0' }}
        run: |
          sudo -v ; curl https://gosspublic.alicdn.com/ossutil/install.sh | sudo bash
          ossutil config -e https://oss-cn-hangzhou.aliyuncs.com -i ${{ secrets.ALIYUN_OSS_ACCESS_KEY }} -k ${{ secrets.ALIYUN_OSS_SECRETS_KEY }} -L CH

      - name: Sync Helm index to Aliyun OSS
        if: ${{ env.chartChangeFlag == '0' }}
        run: |
          curl -o index.current https://apo-charts.oss-cn-hangzhou.aliyuncs.com/index.yaml||true
          helm repo index .cr-release-packages/ --url https://apo-charts.oss-cn-hangzhou.aliyuncs.com/ --merge index.current
          ossutil cp -rf .cr-release-packages/index.yaml oss://apo-charts/
          for file in $(ls  .cr-release-packages/apo-*.tgz)
            do 
               ossutil cp -rf $file oss://apo-charts/
            done
